# create a docker build pipeline
name: CDK DEPLOY / DESTROY

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action: deploy or destroy"
        required: true
        default: "deploy"
        type: choice
        options:
          - deploy
          - destroy
  push:
    branches:
      - "main"
    paths-ignore:
      - '.github/**'
      - '**/package.json'

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  CDK_DEFAULT_REGION: us-east-1

jobs:
  cdk:
    runs-on: ubuntu-latest
    environment:
      name: dev-team
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502 #v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Check if CDK is bootstrapped
        id: check-bootstrap
        run: |
          BOOTSTRAP_STACK=$(aws cloudformation describe-stacks --stack-name CDKToolkit --region $AWS_REGION --query "Stacks[0].StackName" --output text 2>&1 || true)
          if [[ "$BOOTSTRAP_STACK" == "CDKToolkit" ]]; then
            echo "bootstrap_required=false" >> $GITHUB_ENV
          else
            echo "bootstrap_required=true" >> $GITHUB_ENV
          fi
          
      - name: Bootstrap CDK (if required)
        if: ${{ env.bootstrap_required == 'true' }}
        run: |
          npx cdk bootstrap aws://$AWS_ACCOUNT_ID/$AWS_REGION

      - name: CDK DIFF / CDK DEPLOY
        if: ${{ github.event.inputs.action == 'deploy' }}
        working-directory: ./app-lambda-api
        run: |
          pwd
          npm install
          npm run diff && npm run deploy --require-approval=never

      - name: Destroy Stack
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: ./app-lambda-api
        run: |
          pwd
          npm install
          npm run build
          npm run destroy --force
